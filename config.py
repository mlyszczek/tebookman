#!/usr/bin/env python3
## ==========================================================================
#   Licensed under BSD 2clause license See LICENSE file for more information
#   Author: Michał Łyszczek <michal.lyszczek@bofc.pl>
## ==========================================================================
#                   _                                 __
#                  (_)____ ___   ____   ____   _____ / /_ _____
#                 / // __ `__ \ / __ \ / __ \ / ___// __// ___/
#                / // / / / / // /_/ // /_/ // /   / /_ (__  )
#               /_//_/ /_/ /_// .___/ \____//_/    \__//____/
#                            /_/
## ==========================================================================


import	util
from	util import eprint

import	argparse
import	configparser
import	errno
import	os
import	sys


## ==========================================================================
#                                   _         __     __
#              _   __ ____ _ _____ (_)____ _ / /_   / /___   _____
#             | | / // __ `// ___// // __ `// __ \ / // _ \ / ___/
#             | |/ // /_/ // /   / // /_/ // /_/ // //  __/(__  )
#             |___/ \__,_//_/   /_/ \__,_//_.___//_/ \___//____/
#
## ==========================================================================


# this variable holds values from INI config file with project specific
# options
config = configparser.RawConfigParser()


## ==========================================================================
#                           _           ____
#             ____   _____ (_)_   __   / __/__  __ ____   _____ _____
#            / __ \ / ___// /| | / /  / /_ / / / // __ \ / ___// ___/
#           / /_/ // /   / / | |/ /  / __// /_/ // / / // /__ (__  )
#          / .___//_/   /_/  |___/  /_/   \__,_//_/ /_/ \___//____/
#         /_/
## ==========================================================================


## ==========================================================================
#   Sets section and/or option to value if one if it does not exist
## ==========================================================================


def set_if_not_exists(
	section,
	option,
	value
):
	if not config.has_section(section):
		config.add_section(section)

	if not config.has_option(section, option):
		config.set(section, option, value)


## ==========================================================================
#                       __     __ _          ____
#        ____   __  __ / /_   / /(_)_____   / __/__  __ ____   _____ _____
#       / __ \ / / / // __ \ / // // ___/  / /_ / / / // __ \ / ___// ___/
#      / /_/ // /_/ // /_/ // // // /__   / __// /_/ // / / // /__ (__  )
#     / .___/ \__,_//_.___//_//_/ \___/  /_/   \__,_//_/ /_/ \___//____/
#    /_/
## ==========================================================================


## ==========================================================================
#   Initializes module and parses config
## ==========================================================================


def init(
	config_path  # path to projects config
):
	with open(os.path.expanduser(config_path)) as file:
		config.read_file(file)
